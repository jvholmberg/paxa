// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Paxa.Contexts;

#nullable disable

namespace Paxa.Migrations
{
    [DbContext(typeof(PaxaContext))]
    [Migration("20220115001250_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Paxa.Common.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Älmhult",
                            Country = "Sweden",
                            PostalCode = "34391",
                            Street = "Femlingehult 2384"
                        },
                        new
                        {
                            Id = 2,
                            City = "Älmhult",
                            Country = "Sweden",
                            PostalCode = "34391",
                            Street = "Femlingehult 2384"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeslotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TimeslotId")
                        .IsUnique();

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TimeslotId = 1
                        },
                        new
                        {
                            Id = 2,
                            TimeslotId = 2
                        },
                        new
                        {
                            Id = 3,
                            TimeslotId = 3
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Friendship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FromPersonId")
                        .HasColumnType("integer");

                    b.Property<int>("ToPersonId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromPersonId");

                    b.HasIndex("ToPersonId");

                    b.HasIndex("TypeId");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("Paxa.Common.Entities.FriendshipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FriendshipTypes");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Latitude")
                        .HasColumnType("text");

                    b.Property<string>("Longitude")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = "0",
                            Longitude = "0"
                        },
                        new
                        {
                            Id = 2,
                            Latitude = "99",
                            Longitude = "99"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrganizationId = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrganizationId = 2,
                            RoleId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.MembershipRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MembershipRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "OWNER",
                            Description = "Description for owner-role",
                            Name = "Owner"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ADMIN",
                            Description = "Description for admin-role",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Code = "MEMBER",
                            Description = "Description for member-role",
                            Name = "Member"
                        },
                        new
                        {
                            Id = 4,
                            Code = "TRIAL",
                            Description = "Description for trial-role",
                            Name = "Trial"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            LocationId = 1,
                            Name = "House of Padel"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            LocationId = 2,
                            Name = "Sankt Jörgens"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Participant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("PersonId");

                    b.HasIndex("TypeId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Paxa.Common.Entities.ParticipantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ParticipantTypes");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            FirstName = "Johan",
                            LastName = "Holmberg"
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            FirstName = "Joel",
                            LastName = "Holmberg"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int?>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("TypeId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonId = 2,
                            TypeId = 1,
                            Value = 5
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.RatingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RatingTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "General"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Personnel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Washrooms"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Building"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int?>("ResourceSchemaId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ResourceSchemaId");

                    b.HasIndex("TypeId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bana #1",
                            OrganizationId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bana #2",
                            OrganizationId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bana #3",
                            OrganizationId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bana #4",
                            OrganizationId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Utomhus 1",
                            OrganizationId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "Utomhus 2",
                            OrganizationId = 2,
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.ResourceSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("ResourceSchemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Name = "Default Schema",
                            OrganizationId = 1
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ResourceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            Name = "Padel"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description",
                            Name = "Tennis"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description",
                            Name = "Badminton"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description",
                            Name = "Bordtennis"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description",
                            Name = "Ridning"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Timeslot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Timeslots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            From = new DateTime(2022, 1, 15, 0, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 1, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 2,
                            From = new DateTime(2022, 1, 15, 1, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 2, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 3,
                            From = new DateTime(2022, 1, 15, 2, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 3, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 4,
                            From = new DateTime(2022, 1, 15, 3, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 4, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 5,
                            From = new DateTime(2022, 1, 15, 4, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 5, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 6,
                            From = new DateTime(2022, 1, 15, 5, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 6, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 7,
                            From = new DateTime(2022, 1, 15, 6, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 7, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 8,
                            From = new DateTime(2022, 1, 15, 7, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 8, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        },
                        new
                        {
                            Id = 9,
                            From = new DateTime(2022, 1, 15, 8, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820),
                            ResourceId = 1,
                            To = new DateTime(2022, 1, 15, 9, 12, 49, 678, DateTimeKind.Utc).AddTicks(5820)
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.TimeslotSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FromTimestampId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceSchemaId")
                        .HasColumnType("integer");

                    b.Property<int>("ToTimestampId")
                        .HasColumnType("integer");

                    b.Property<int>("WeekdayId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromTimestampId")
                        .IsUnique();

                    b.HasIndex("ResourceSchemaId");

                    b.HasIndex("ToTimestampId")
                        .IsUnique();

                    b.HasIndex("WeekdayId");

                    b.ToTable("TimeslotSchemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromTimestampId = 1,
                            ResourceSchemaId = 1,
                            ToTimestampId = 2,
                            WeekdayId = 1
                        },
                        new
                        {
                            Id = 2,
                            FromTimestampId = 3,
                            ResourceSchemaId = 1,
                            ToTimestampId = 4,
                            WeekdayId = 1
                        },
                        new
                        {
                            Id = 3,
                            FromTimestampId = 5,
                            ResourceSchemaId = 1,
                            ToTimestampId = 6,
                            WeekdayId = 7
                        },
                        new
                        {
                            Id = 4,
                            FromTimestampId = 7,
                            ResourceSchemaId = 1,
                            ToTimestampId = 8,
                            WeekdayId = 7
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Timestamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.Property<int>("Minutes")
                        .HasColumnType("integer");

                    b.Property<int>("Seconds")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Timestamps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hours = 10,
                            Minutes = 0,
                            Seconds = 0
                        },
                        new
                        {
                            Id = 2,
                            Hours = 11,
                            Minutes = 0,
                            Seconds = 0
                        },
                        new
                        {
                            Id = 3,
                            Hours = 11,
                            Minutes = 0,
                            Seconds = 0
                        },
                        new
                        {
                            Id = 4,
                            Hours = 12,
                            Minutes = 0,
                            Seconds = 0
                        },
                        new
                        {
                            Id = 5,
                            Hours = 10,
                            Minutes = 0,
                            Seconds = 0
                        },
                        new
                        {
                            Id = 6,
                            Hours = 11,
                            Minutes = 0,
                            Seconds = 0
                        },
                        new
                        {
                            Id = 7,
                            Hours = 11,
                            Minutes = 0,
                            Seconds = 0
                        },
                        new
                        {
                            Id = 8,
                            Hours = 12,
                            Minutes = 0,
                            Seconds = 0
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<int?>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johan.holmberg@domain.se",
                            PasswordHash = "$2a$11$BpZzaTEo3dPqtNlCAxImrOmW7MsR2EqyBhdqkCgcw6ZwvTPAnVcfG",
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "joel.holmberg@domain.se",
                            PasswordHash = "$2a$11$Ydhpzyy1aInObKsqvbvTqeHko/r5Z1VdK/5rjmZjqYmRBbCApRBa2",
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "owner@houseofpadel.se",
                            PasswordHash = "$2a$11$d8I2sjUt4iSgpGvYJOsPguUKCxk8Ik1rFIKqzmDsW/rg7A324MWCy"
                        },
                        new
                        {
                            Id = 4,
                            Email = "owner@sanktgorans.se",
                            PasswordHash = "$2a$11$rp.ubPQsFcD/Alc7R8DvIuT7Lotq1KS2Sm9Np910BNr/QymP5u69G"
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Weekday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Weekdays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sunday",
                            Number = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monday",
                            Number = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tuesday",
                            Number = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Wednesday",
                            Number = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Thursday",
                            Number = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Friday",
                            Number = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "Saturday",
                            Number = 6
                        });
                });

            modelBuilder.Entity("Paxa.Common.Entities.Booking", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Person", null)
                        .WithMany("Bookings")
                        .HasForeignKey("PersonId");

                    b.HasOne("Paxa.Common.Entities.Timeslot", "Timeslot")
                        .WithOne("Booking")
                        .HasForeignKey("Paxa.Common.Entities.Booking", "TimeslotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Timeslot");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Friendship", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Person", "FromPerson")
                        .WithMany("FromFriendships")
                        .HasForeignKey("FromPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.Person", "ToPerson")
                        .WithMany("ToFriendships")
                        .HasForeignKey("ToPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.FriendshipType", "Type")
                        .WithMany("Friendships")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromPerson");

                    b.Navigation("ToPerson");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Membership", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Organization", "Organization")
                        .WithMany("Memberships")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.MembershipRole", "Role")
                        .WithMany("Memberships")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Organization", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Location", "Location")
                        .WithOne("Organization")
                        .HasForeignKey("Paxa.Common.Entities.Organization", "LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Participant", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Booking", "Booking")
                        .WithMany("Participants")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.Person", "Person")
                        .WithMany("Participating")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.ParticipantType", "Type")
                        .WithMany("Participants")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Person");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Person", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Address", "Address")
                        .WithOne("Person")
                        .HasForeignKey("Paxa.Common.Entities.Person", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Rating", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Organization", "Organization")
                        .WithMany("Ratings")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Paxa.Common.Entities.Person", "Person")
                        .WithMany("Ratings")
                        .HasForeignKey("PersonId");

                    b.HasOne("Paxa.Common.Entities.RatingType", "Type")
                        .WithMany("Ratings")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Person");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Resource", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Organization", "Organization")
                        .WithMany("Resources")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.ResourceSchema", "ResourceSchema")
                        .WithMany("Resources")
                        .HasForeignKey("ResourceSchemaId");

                    b.HasOne("Paxa.Common.Entities.ResourceType", "Type")
                        .WithMany("Resources")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("ResourceSchema");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Paxa.Common.Entities.ResourceSchema", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Organization", "Organization")
                        .WithMany("ResourceSchemas")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Timeslot", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Resource", "Resource")
                        .WithMany("Timeslots")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Paxa.Common.Entities.TimeslotSchema", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Timestamp", "FromTimestamp")
                        .WithOne("FromTimeslotSchema")
                        .HasForeignKey("Paxa.Common.Entities.TimeslotSchema", "FromTimestampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.ResourceSchema", "ResourceSchema")
                        .WithMany("TimeslotSchemas")
                        .HasForeignKey("ResourceSchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.Timestamp", "ToTimestamp")
                        .WithOne("ToTimeslotSchema")
                        .HasForeignKey("Paxa.Common.Entities.TimeslotSchema", "ToTimestampId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paxa.Common.Entities.Weekday", "Weekday")
                        .WithMany("TimeslotSchemas")
                        .HasForeignKey("WeekdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTimestamp");

                    b.Navigation("ResourceSchema");

                    b.Navigation("ToTimestamp");

                    b.Navigation("Weekday");
                });

            modelBuilder.Entity("Paxa.Common.Entities.User", b =>
                {
                    b.HasOne("Paxa.Common.Entities.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Paxa.Common.Entities.User", "PersonId");

                    b.OwnsMany("Paxa.Common.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("text");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("ReasonRevoked")
                                .HasColumnType("text");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("text");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("text");

                            b1.Property<string>("Token")
                                .HasColumnType("text");

                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId");

                            b1.ToTable("RefreshTokens");

                            b1.WithOwner("User")
                                .HasForeignKey("UserId");

                            b1.Navigation("User");
                        });

                    b.Navigation("Person");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Address", b =>
                {
                    b.Navigation("Person");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Booking", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("Paxa.Common.Entities.FriendshipType", b =>
                {
                    b.Navigation("Friendships");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Location", b =>
                {
                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Paxa.Common.Entities.MembershipRole", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Organization", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Ratings");

                    b.Navigation("ResourceSchemas");

                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Paxa.Common.Entities.ParticipantType", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Person", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("FromFriendships");

                    b.Navigation("Participating");

                    b.Navigation("Ratings");

                    b.Navigation("ToFriendships");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Paxa.Common.Entities.RatingType", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Resource", b =>
                {
                    b.Navigation("Timeslots");
                });

            modelBuilder.Entity("Paxa.Common.Entities.ResourceSchema", b =>
                {
                    b.Navigation("Resources");

                    b.Navigation("TimeslotSchemas");
                });

            modelBuilder.Entity("Paxa.Common.Entities.ResourceType", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Timeslot", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Timestamp", b =>
                {
                    b.Navigation("FromTimeslotSchema");

                    b.Navigation("ToTimeslotSchema");
                });

            modelBuilder.Entity("Paxa.Common.Entities.User", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("Paxa.Common.Entities.Weekday", b =>
                {
                    b.Navigation("TimeslotSchemas");
                });
#pragma warning restore 612, 618
        }
    }
}
